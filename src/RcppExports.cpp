// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// multinomial_resampling_n_
IntegerVector multinomial_resampling_n_(const NumericVector& weights, int ndraws);
RcppExport SEXP _bayeshscore_multinomial_resampling_n_(SEXP weightsSEXP, SEXP ndrawsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< int >::type ndraws(ndrawsSEXP);
    rcpp_result_gen = Rcpp::wrap(multinomial_resampling_n_(weights, ndraws));
    return rcpp_result_gen;
END_RCPP
}
// rmvnorm
NumericMatrix rmvnorm(int nsamples, const NumericVector& mean, const NumericMatrix& covariance);
RcppExport SEXP _bayeshscore_rmvnorm(SEXP nsamplesSEXP, SEXP meanSEXP, SEXP covarianceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nsamples(nsamplesSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< const NumericMatrix& >::type covariance(covarianceSEXP);
    rcpp_result_gen = Rcpp::wrap(rmvnorm(nsamples, mean, covariance));
    return rcpp_result_gen;
END_RCPP
}
// rmvnorm_transpose
NumericMatrix rmvnorm_transpose(int nsamples, const NumericVector& mean, const NumericMatrix& covariance);
RcppExport SEXP _bayeshscore_rmvnorm_transpose(SEXP nsamplesSEXP, SEXP meanSEXP, SEXP covarianceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nsamples(nsamplesSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< const NumericMatrix& >::type covariance(covarianceSEXP);
    rcpp_result_gen = Rcpp::wrap(rmvnorm_transpose(nsamples, mean, covariance));
    return rcpp_result_gen;
END_RCPP
}
// dmvnorm
NumericVector dmvnorm(const NumericMatrix& x, const NumericVector& mean, const NumericMatrix& covariance);
RcppExport SEXP _bayeshscore_dmvnorm(SEXP xSEXP, SEXP meanSEXP, SEXP covarianceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericMatrix& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< const NumericMatrix& >::type covariance(covarianceSEXP);
    rcpp_result_gen = Rcpp::wrap(dmvnorm(x, mean, covariance));
    return rcpp_result_gen;
END_RCPP
}
// dmvnorm_transpose
NumericVector dmvnorm_transpose(const NumericMatrix& x, const NumericVector& mean, const NumericMatrix& covariance);
RcppExport SEXP _bayeshscore_dmvnorm_transpose(SEXP xSEXP, SEXP meanSEXP, SEXP covarianceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericMatrix& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< const NumericMatrix& >::type covariance(covarianceSEXP);
    rcpp_result_gen = Rcpp::wrap(dmvnorm_transpose(x, mean, covariance));
    return rcpp_result_gen;
END_RCPP
}
// SSP_resampling_n_
IntegerVector SSP_resampling_n_(const NumericVector& weights, const NumericVector& u, const double tol);
RcppExport SEXP _bayeshscore_SSP_resampling_n_(SEXP weightsSEXP, SEXP uSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type u(uSEXP);
    Rcpp::traits::input_parameter< const double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(SSP_resampling_n_(weights, u, tol));
    return rcpp_result_gen;
END_RCPP
}
// systematic_resampling_n_
IntegerVector systematic_resampling_n_(const NumericVector& weights, int ndraws, double u);
RcppExport SEXP _bayeshscore_systematic_resampling_n_(SEXP weightsSEXP, SEXP ndrawsSEXP, SEXP uSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< int >::type ndraws(ndrawsSEXP);
    Rcpp::traits::input_parameter< double >::type u(uSEXP);
    rcpp_result_gen = Rcpp::wrap(systematic_resampling_n_(weights, ndraws, u));
    return rcpp_result_gen;
END_RCPP
}
// phi_cpp
double phi_cpp(double y, double yi, double sigma2);
RcppExport SEXP _bayeshscore_phi_cpp(SEXP ySEXP, SEXP yiSEXP, SEXP sigma2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type yi(yiSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    rcpp_result_gen = Rcpp::wrap(phi_cpp(y, yi, sigma2));
    return rcpp_result_gen;
END_RCPP
}
// dphi_cpp
double dphi_cpp(double y, double yi, double sigma2);
RcppExport SEXP _bayeshscore_dphi_cpp(SEXP ySEXP, SEXP yiSEXP, SEXP sigma2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type yi(yiSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    rcpp_result_gen = Rcpp::wrap(dphi_cpp(y, yi, sigma2));
    return rcpp_result_gen;
END_RCPP
}
// d2phi_cpp
double d2phi_cpp(double y, double yi, double sigma2);
RcppExport SEXP _bayeshscore_d2phi_cpp(SEXP ySEXP, SEXP yiSEXP, SEXP sigma2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type yi(yiSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    rcpp_result_gen = Rcpp::wrap(d2phi_cpp(y, yi, sigma2));
    return rcpp_result_gen;
END_RCPP
}
// get_G_RBF_cpp
NumericMatrix get_G_RBF_cpp(NumericVector x, double sigma2);
RcppExport SEXP _bayeshscore_get_G_RBF_cpp(SEXP xSEXP, SEXP sigma2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    rcpp_result_gen = Rcpp::wrap(get_G_RBF_cpp(x, sigma2));
    return rcpp_result_gen;
END_RCPP
}
// get_h1_RBF_cpp
NumericVector get_h1_RBF_cpp(NumericVector x, double sigma2);
RcppExport SEXP _bayeshscore_get_h1_RBF_cpp(SEXP xSEXP, SEXP sigma2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    rcpp_result_gen = Rcpp::wrap(get_h1_RBF_cpp(x, sigma2));
    return rcpp_result_gen;
END_RCPP
}
// get_h2_RBF_cpp
NumericVector get_h2_RBF_cpp(NumericVector x, double sigma2);
RcppExport SEXP _bayeshscore_get_h2_RBF_cpp(SEXP xSEXP, SEXP sigma2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    rcpp_result_gen = Rcpp::wrap(get_h2_RBF_cpp(x, sigma2));
    return rcpp_result_gen;
END_RCPP
}
// loss_d1
double loss_d1(NumericVector theta, double sigma2, NumericMatrix Gtraining, NumericVector xtraining, NumericVector xtest);
RcppExport SEXP _bayeshscore_loss_d1(SEXP thetaSEXP, SEXP sigma2SEXP, SEXP GtrainingSEXP, SEXP xtrainingSEXP, SEXP xtestSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Gtraining(GtrainingSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xtraining(xtrainingSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xtest(xtestSEXP);
    rcpp_result_gen = Rcpp::wrap(loss_d1(theta, sigma2, Gtraining, xtraining, xtest));
    return rcpp_result_gen;
END_RCPP
}
// loss_d2
double loss_d2(NumericVector theta, double sigma2, NumericMatrix Gtraining, NumericVector xtraining, NumericVector xtest);
RcppExport SEXP _bayeshscore_loss_d2(SEXP thetaSEXP, SEXP sigma2SEXP, SEXP GtrainingSEXP, SEXP xtrainingSEXP, SEXP xtestSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Gtraining(GtrainingSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xtraining(xtrainingSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xtest(xtestSEXP);
    rcpp_result_gen = Rcpp::wrap(loss_d2(theta, sigma2, Gtraining, xtraining, xtest));
    return rcpp_result_gen;
END_RCPP
}
// K_cpp
double K_cpp(double y, double ystar, double sigma2star);
RcppExport SEXP _bayeshscore_K_cpp(SEXP ySEXP, SEXP ystarSEXP, SEXP sigma2starSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type ystar(ystarSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2star(sigma2starSEXP);
    rcpp_result_gen = Rcpp::wrap(K_cpp(y, ystar, sigma2star));
    return rcpp_result_gen;
END_RCPP
}
// dK_cpp
double dK_cpp(double y, double ystar, double sigma2star);
RcppExport SEXP _bayeshscore_dK_cpp(SEXP ySEXP, SEXP ystarSEXP, SEXP sigma2starSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type ystar(ystarSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2star(sigma2starSEXP);
    rcpp_result_gen = Rcpp::wrap(dK_cpp(y, ystar, sigma2star));
    return rcpp_result_gen;
END_RCPP
}
// d2K_cpp
double d2K_cpp(double y, double ystar, double sigma2star);
RcppExport SEXP _bayeshscore_d2K_cpp(SEXP ySEXP, SEXP ystarSEXP, SEXP sigma2starSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type ystar(ystarSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2star(sigma2starSEXP);
    rcpp_result_gen = Rcpp::wrap(d2K_cpp(y, ystar, sigma2star));
    return rcpp_result_gen;
END_RCPP
}
// get_derivative_cpp
double get_derivative_cpp(NumericVector ys, double ystar, double sigma2star, int order);
RcppExport SEXP _bayeshscore_get_derivative_cpp(SEXP ysSEXP, SEXP ystarSEXP, SEXP sigma2starSEXP, SEXP orderSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type ys(ysSEXP);
    Rcpp::traits::input_parameter< double >::type ystar(ystarSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2star(sigma2starSEXP);
    Rcpp::traits::input_parameter< int >::type order(orderSEXP);
    rcpp_result_gen = Rcpp::wrap(get_derivative_cpp(ys, ystar, sigma2star, order));
    return rcpp_result_gen;
END_RCPP
}
// KF_assimilate_one_cpp
List KF_assimilate_one_cpp(NumericVector Yt, int t, NumericVector initial_mean, NumericMatrix initial_var, NumericMatrix phi, NumericMatrix psi, NumericMatrix sigmaV2, NumericMatrix sigmaW2, List KF_current);
RcppExport SEXP _bayeshscore_KF_assimilate_one_cpp(SEXP YtSEXP, SEXP tSEXP, SEXP initial_meanSEXP, SEXP initial_varSEXP, SEXP phiSEXP, SEXP psiSEXP, SEXP sigmaV2SEXP, SEXP sigmaW2SEXP, SEXP KF_currentSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Yt(YtSEXP);
    Rcpp::traits::input_parameter< int >::type t(tSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type initial_mean(initial_meanSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type initial_var(initial_varSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type psi(psiSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type sigmaV2(sigmaV2SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type sigmaW2(sigmaW2SEXP);
    Rcpp::traits::input_parameter< List >::type KF_current(KF_currentSEXP);
    rcpp_result_gen = Rcpp::wrap(KF_assimilate_one_cpp(Yt, t, initial_mean, initial_var, phi, psi, sigmaV2, sigmaW2, KF_current));
    return rcpp_result_gen;
END_RCPP
}
// KF_filtering_cpp
List KF_filtering_cpp(NumericMatrix Y, NumericVector initial_mean, NumericMatrix initial_var, NumericMatrix phi, NumericMatrix psi, NumericMatrix sigmaV2, NumericMatrix sigmaW2);
RcppExport SEXP _bayeshscore_KF_filtering_cpp(SEXP YSEXP, SEXP initial_meanSEXP, SEXP initial_varSEXP, SEXP phiSEXP, SEXP psiSEXP, SEXP sigmaV2SEXP, SEXP sigmaW2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Y(YSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type initial_mean(initial_meanSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type initial_var(initial_varSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type psi(psiSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type sigmaV2(sigmaV2SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type sigmaW2(sigmaW2SEXP);
    rcpp_result_gen = Rcpp::wrap(KF_filtering_cpp(Y, initial_mean, initial_var, phi, psi, sigmaV2, sigmaW2));
    return rcpp_result_gen;
END_RCPP
}
// rtransition_logistic_cpp
NumericMatrix rtransition_logistic_cpp(const NumericMatrix& Xold, const double& delta_t, const double& dt, const double& sigma, const double& r, const double& b);
RcppExport SEXP _bayeshscore_rtransition_logistic_cpp(SEXP XoldSEXP, SEXP delta_tSEXP, SEXP dtSEXP, SEXP sigmaSEXP, SEXP rSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericMatrix& >::type Xold(XoldSEXP);
    Rcpp::traits::input_parameter< const double& >::type delta_t(delta_tSEXP);
    Rcpp::traits::input_parameter< const double& >::type dt(dtSEXP);
    Rcpp::traits::input_parameter< const double& >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< const double& >::type r(rSEXP);
    Rcpp::traits::input_parameter< const double& >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(rtransition_logistic_cpp(Xold, delta_t, dt, sigma, r, b));
    return rcpp_result_gen;
END_RCPP
}
// rinitial_SVLevy_cpp
NumericMatrix rinitial_SVLevy_cpp(int N, double t, double xi, double w2, double lambda);
RcppExport SEXP _bayeshscore_rinitial_SVLevy_cpp(SEXP NSEXP, SEXP tSEXP, SEXP xiSEXP, SEXP w2SEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< double >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< double >::type w2(w2SEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(rinitial_SVLevy_cpp(N, t, xi, w2, lambda));
    return rcpp_result_gen;
END_RCPP
}
// rtransition_SVLevy_cpp
NumericMatrix rtransition_SVLevy_cpp(NumericMatrix Xold, double t_1, double t, double xi, double w2, double lambda);
RcppExport SEXP _bayeshscore_rtransition_SVLevy_cpp(SEXP XoldSEXP, SEXP t_1SEXP, SEXP tSEXP, SEXP xiSEXP, SEXP w2SEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Xold(XoldSEXP);
    Rcpp::traits::input_parameter< double >::type t_1(t_1SEXP);
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< double >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< double >::type w2(w2SEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(rtransition_SVLevy_cpp(Xold, t_1, t, xi, w2, lambda));
    return rcpp_result_gen;
END_RCPP
}
// dobs_SVLevy_cpp
NumericMatrix dobs_SVLevy_cpp(NumericVector Yt, NumericMatrix Xts, double mu, double beta, bool log);
RcppExport SEXP _bayeshscore_dobs_SVLevy_cpp(SEXP YtSEXP, SEXP XtsSEXP, SEXP muSEXP, SEXP betaSEXP, SEXP logSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Yt(YtSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Xts(XtsSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< bool >::type log(logSEXP);
    rcpp_result_gen = Rcpp::wrap(dobs_SVLevy_cpp(Yt, Xts, mu, beta, log));
    return rcpp_result_gen;
END_RCPP
}
// d1logdobs_SVLevy_cpp
NumericMatrix d1logdobs_SVLevy_cpp(NumericVector Yt, NumericMatrix Xts, double mu, double beta);
RcppExport SEXP _bayeshscore_d1logdobs_SVLevy_cpp(SEXP YtSEXP, SEXP XtsSEXP, SEXP muSEXP, SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Yt(YtSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Xts(XtsSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    rcpp_result_gen = Rcpp::wrap(d1logdobs_SVLevy_cpp(Yt, Xts, mu, beta));
    return rcpp_result_gen;
END_RCPP
}
// d2logdobs_SVLevy_cpp
NumericMatrix d2logdobs_SVLevy_cpp(NumericVector Yt, NumericMatrix Xts, double mu, double beta);
RcppExport SEXP _bayeshscore_d2logdobs_SVLevy_cpp(SEXP YtSEXP, SEXP XtsSEXP, SEXP muSEXP, SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Yt(YtSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Xts(XtsSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    rcpp_result_gen = Rcpp::wrap(d2logdobs_SVLevy_cpp(Yt, Xts, mu, beta));
    return rcpp_result_gen;
END_RCPP
}
// rinitial_SVLevy_multifactor_cpp
NumericMatrix rinitial_SVLevy_multifactor_cpp(int N, double t, double xi, double w2, double lambda1, double lambda2, double w);
RcppExport SEXP _bayeshscore_rinitial_SVLevy_multifactor_cpp(SEXP NSEXP, SEXP tSEXP, SEXP xiSEXP, SEXP w2SEXP, SEXP lambda1SEXP, SEXP lambda2SEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< double >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< double >::type w2(w2SEXP);
    Rcpp::traits::input_parameter< double >::type lambda1(lambda1SEXP);
    Rcpp::traits::input_parameter< double >::type lambda2(lambda2SEXP);
    Rcpp::traits::input_parameter< double >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(rinitial_SVLevy_multifactor_cpp(N, t, xi, w2, lambda1, lambda2, w));
    return rcpp_result_gen;
END_RCPP
}
// rtransition_SVLevy_multifactor_cpp
NumericMatrix rtransition_SVLevy_multifactor_cpp(NumericMatrix Xold, double t_1, double t, double xi, double w2, double lambda1, double lambda2, double w);
RcppExport SEXP _bayeshscore_rtransition_SVLevy_multifactor_cpp(SEXP XoldSEXP, SEXP t_1SEXP, SEXP tSEXP, SEXP xiSEXP, SEXP w2SEXP, SEXP lambda1SEXP, SEXP lambda2SEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Xold(XoldSEXP);
    Rcpp::traits::input_parameter< double >::type t_1(t_1SEXP);
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< double >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< double >::type w2(w2SEXP);
    Rcpp::traits::input_parameter< double >::type lambda1(lambda1SEXP);
    Rcpp::traits::input_parameter< double >::type lambda2(lambda2SEXP);
    Rcpp::traits::input_parameter< double >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(rtransition_SVLevy_multifactor_cpp(Xold, t_1, t, xi, w2, lambda1, lambda2, w));
    return rcpp_result_gen;
END_RCPP
}
// dobs_SVLevy_multifactor_cpp
NumericMatrix dobs_SVLevy_multifactor_cpp(NumericVector Yt, NumericMatrix Xts, double mu, double beta, bool log);
RcppExport SEXP _bayeshscore_dobs_SVLevy_multifactor_cpp(SEXP YtSEXP, SEXP XtsSEXP, SEXP muSEXP, SEXP betaSEXP, SEXP logSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Yt(YtSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Xts(XtsSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< bool >::type log(logSEXP);
    rcpp_result_gen = Rcpp::wrap(dobs_SVLevy_multifactor_cpp(Yt, Xts, mu, beta, log));
    return rcpp_result_gen;
END_RCPP
}
// d1logdobs_SVLevy_multifactor_cpp
NumericMatrix d1logdobs_SVLevy_multifactor_cpp(NumericVector Yt, NumericMatrix Xts, double mu, double beta);
RcppExport SEXP _bayeshscore_d1logdobs_SVLevy_multifactor_cpp(SEXP YtSEXP, SEXP XtsSEXP, SEXP muSEXP, SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Yt(YtSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Xts(XtsSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    rcpp_result_gen = Rcpp::wrap(d1logdobs_SVLevy_multifactor_cpp(Yt, Xts, mu, beta));
    return rcpp_result_gen;
END_RCPP
}
// d2logdobs_SVLevy_multifactor_cpp
NumericMatrix d2logdobs_SVLevy_multifactor_cpp(NumericVector Yt, NumericMatrix Xts, double mu, double beta);
RcppExport SEXP _bayeshscore_d2logdobs_SVLevy_multifactor_cpp(SEXP YtSEXP, SEXP XtsSEXP, SEXP muSEXP, SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Yt(YtSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Xts(XtsSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    rcpp_result_gen = Rcpp::wrap(d2logdobs_SVLevy_multifactor_cpp(Yt, Xts, mu, beta));
    return rcpp_result_gen;
END_RCPP
}
// rinitial_SVLevy_multifactorleverage_cpp
NumericMatrix rinitial_SVLevy_multifactorleverage_cpp(int N, double t, double xi, double w2, double lambda1, double lambda2, double w);
RcppExport SEXP _bayeshscore_rinitial_SVLevy_multifactorleverage_cpp(SEXP NSEXP, SEXP tSEXP, SEXP xiSEXP, SEXP w2SEXP, SEXP lambda1SEXP, SEXP lambda2SEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< double >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< double >::type w2(w2SEXP);
    Rcpp::traits::input_parameter< double >::type lambda1(lambda1SEXP);
    Rcpp::traits::input_parameter< double >::type lambda2(lambda2SEXP);
    Rcpp::traits::input_parameter< double >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(rinitial_SVLevy_multifactorleverage_cpp(N, t, xi, w2, lambda1, lambda2, w));
    return rcpp_result_gen;
END_RCPP
}
// rtransition_SVLevy_multifactorleverage_cpp
NumericMatrix rtransition_SVLevy_multifactorleverage_cpp(NumericMatrix Xold, double t_1, double t, double xi, double w2, double lambda1, double lambda2, double w);
RcppExport SEXP _bayeshscore_rtransition_SVLevy_multifactorleverage_cpp(SEXP XoldSEXP, SEXP t_1SEXP, SEXP tSEXP, SEXP xiSEXP, SEXP w2SEXP, SEXP lambda1SEXP, SEXP lambda2SEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Xold(XoldSEXP);
    Rcpp::traits::input_parameter< double >::type t_1(t_1SEXP);
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< double >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< double >::type w2(w2SEXP);
    Rcpp::traits::input_parameter< double >::type lambda1(lambda1SEXP);
    Rcpp::traits::input_parameter< double >::type lambda2(lambda2SEXP);
    Rcpp::traits::input_parameter< double >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(rtransition_SVLevy_multifactorleverage_cpp(Xold, t_1, t, xi, w2, lambda1, lambda2, w));
    return rcpp_result_gen;
END_RCPP
}
// dobs_SVLevy_multifactorleverage_cpp
NumericMatrix dobs_SVLevy_multifactorleverage_cpp(NumericVector Yt, NumericMatrix Xts, double mu, double beta, double xi, double lambda1, double lambda2, double w, double rho1, double rho2, bool log);
RcppExport SEXP _bayeshscore_dobs_SVLevy_multifactorleverage_cpp(SEXP YtSEXP, SEXP XtsSEXP, SEXP muSEXP, SEXP betaSEXP, SEXP xiSEXP, SEXP lambda1SEXP, SEXP lambda2SEXP, SEXP wSEXP, SEXP rho1SEXP, SEXP rho2SEXP, SEXP logSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Yt(YtSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Xts(XtsSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< double >::type lambda1(lambda1SEXP);
    Rcpp::traits::input_parameter< double >::type lambda2(lambda2SEXP);
    Rcpp::traits::input_parameter< double >::type w(wSEXP);
    Rcpp::traits::input_parameter< double >::type rho1(rho1SEXP);
    Rcpp::traits::input_parameter< double >::type rho2(rho2SEXP);
    Rcpp::traits::input_parameter< bool >::type log(logSEXP);
    rcpp_result_gen = Rcpp::wrap(dobs_SVLevy_multifactorleverage_cpp(Yt, Xts, mu, beta, xi, lambda1, lambda2, w, rho1, rho2, log));
    return rcpp_result_gen;
END_RCPP
}
// d1logdobs_SVLevy_multifactorleverage_cpp
NumericMatrix d1logdobs_SVLevy_multifactorleverage_cpp(NumericVector Yt, NumericMatrix Xts, double mu, double beta, double xi, double lambda1, double lambda2, double w, double rho1, double rho2);
RcppExport SEXP _bayeshscore_d1logdobs_SVLevy_multifactorleverage_cpp(SEXP YtSEXP, SEXP XtsSEXP, SEXP muSEXP, SEXP betaSEXP, SEXP xiSEXP, SEXP lambda1SEXP, SEXP lambda2SEXP, SEXP wSEXP, SEXP rho1SEXP, SEXP rho2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Yt(YtSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Xts(XtsSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< double >::type lambda1(lambda1SEXP);
    Rcpp::traits::input_parameter< double >::type lambda2(lambda2SEXP);
    Rcpp::traits::input_parameter< double >::type w(wSEXP);
    Rcpp::traits::input_parameter< double >::type rho1(rho1SEXP);
    Rcpp::traits::input_parameter< double >::type rho2(rho2SEXP);
    rcpp_result_gen = Rcpp::wrap(d1logdobs_SVLevy_multifactorleverage_cpp(Yt, Xts, mu, beta, xi, lambda1, lambda2, w, rho1, rho2));
    return rcpp_result_gen;
END_RCPP
}
// d2logdobs_SVLevy_multifactorleverage_cpp
NumericMatrix d2logdobs_SVLevy_multifactorleverage_cpp(NumericVector Yt, NumericMatrix Xts, double mu, double beta);
RcppExport SEXP _bayeshscore_d2logdobs_SVLevy_multifactorleverage_cpp(SEXP YtSEXP, SEXP XtsSEXP, SEXP muSEXP, SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type Yt(YtSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Xts(XtsSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    rcpp_result_gen = Rcpp::wrap(d2logdobs_SVLevy_multifactorleverage_cpp(Yt, Xts, mu, beta));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP _rcpp_module_boot_module_tree();

static const R_CallMethodDef CallEntries[] = {
    {"_bayeshscore_multinomial_resampling_n_", (DL_FUNC) &_bayeshscore_multinomial_resampling_n_, 2},
    {"_bayeshscore_rmvnorm", (DL_FUNC) &_bayeshscore_rmvnorm, 3},
    {"_bayeshscore_rmvnorm_transpose", (DL_FUNC) &_bayeshscore_rmvnorm_transpose, 3},
    {"_bayeshscore_dmvnorm", (DL_FUNC) &_bayeshscore_dmvnorm, 3},
    {"_bayeshscore_dmvnorm_transpose", (DL_FUNC) &_bayeshscore_dmvnorm_transpose, 3},
    {"_bayeshscore_SSP_resampling_n_", (DL_FUNC) &_bayeshscore_SSP_resampling_n_, 3},
    {"_bayeshscore_systematic_resampling_n_", (DL_FUNC) &_bayeshscore_systematic_resampling_n_, 3},
    {"_bayeshscore_phi_cpp", (DL_FUNC) &_bayeshscore_phi_cpp, 3},
    {"_bayeshscore_dphi_cpp", (DL_FUNC) &_bayeshscore_dphi_cpp, 3},
    {"_bayeshscore_d2phi_cpp", (DL_FUNC) &_bayeshscore_d2phi_cpp, 3},
    {"_bayeshscore_get_G_RBF_cpp", (DL_FUNC) &_bayeshscore_get_G_RBF_cpp, 2},
    {"_bayeshscore_get_h1_RBF_cpp", (DL_FUNC) &_bayeshscore_get_h1_RBF_cpp, 2},
    {"_bayeshscore_get_h2_RBF_cpp", (DL_FUNC) &_bayeshscore_get_h2_RBF_cpp, 2},
    {"_bayeshscore_loss_d1", (DL_FUNC) &_bayeshscore_loss_d1, 5},
    {"_bayeshscore_loss_d2", (DL_FUNC) &_bayeshscore_loss_d2, 5},
    {"_bayeshscore_K_cpp", (DL_FUNC) &_bayeshscore_K_cpp, 3},
    {"_bayeshscore_dK_cpp", (DL_FUNC) &_bayeshscore_dK_cpp, 3},
    {"_bayeshscore_d2K_cpp", (DL_FUNC) &_bayeshscore_d2K_cpp, 3},
    {"_bayeshscore_get_derivative_cpp", (DL_FUNC) &_bayeshscore_get_derivative_cpp, 4},
    {"_bayeshscore_KF_assimilate_one_cpp", (DL_FUNC) &_bayeshscore_KF_assimilate_one_cpp, 9},
    {"_bayeshscore_KF_filtering_cpp", (DL_FUNC) &_bayeshscore_KF_filtering_cpp, 7},
    {"_bayeshscore_rtransition_logistic_cpp", (DL_FUNC) &_bayeshscore_rtransition_logistic_cpp, 6},
    {"_bayeshscore_rinitial_SVLevy_cpp", (DL_FUNC) &_bayeshscore_rinitial_SVLevy_cpp, 5},
    {"_bayeshscore_rtransition_SVLevy_cpp", (DL_FUNC) &_bayeshscore_rtransition_SVLevy_cpp, 6},
    {"_bayeshscore_dobs_SVLevy_cpp", (DL_FUNC) &_bayeshscore_dobs_SVLevy_cpp, 5},
    {"_bayeshscore_d1logdobs_SVLevy_cpp", (DL_FUNC) &_bayeshscore_d1logdobs_SVLevy_cpp, 4},
    {"_bayeshscore_d2logdobs_SVLevy_cpp", (DL_FUNC) &_bayeshscore_d2logdobs_SVLevy_cpp, 4},
    {"_bayeshscore_rinitial_SVLevy_multifactor_cpp", (DL_FUNC) &_bayeshscore_rinitial_SVLevy_multifactor_cpp, 7},
    {"_bayeshscore_rtransition_SVLevy_multifactor_cpp", (DL_FUNC) &_bayeshscore_rtransition_SVLevy_multifactor_cpp, 8},
    {"_bayeshscore_dobs_SVLevy_multifactor_cpp", (DL_FUNC) &_bayeshscore_dobs_SVLevy_multifactor_cpp, 5},
    {"_bayeshscore_d1logdobs_SVLevy_multifactor_cpp", (DL_FUNC) &_bayeshscore_d1logdobs_SVLevy_multifactor_cpp, 4},
    {"_bayeshscore_d2logdobs_SVLevy_multifactor_cpp", (DL_FUNC) &_bayeshscore_d2logdobs_SVLevy_multifactor_cpp, 4},
    {"_bayeshscore_rinitial_SVLevy_multifactorleverage_cpp", (DL_FUNC) &_bayeshscore_rinitial_SVLevy_multifactorleverage_cpp, 7},
    {"_bayeshscore_rtransition_SVLevy_multifactorleverage_cpp", (DL_FUNC) &_bayeshscore_rtransition_SVLevy_multifactorleverage_cpp, 8},
    {"_bayeshscore_dobs_SVLevy_multifactorleverage_cpp", (DL_FUNC) &_bayeshscore_dobs_SVLevy_multifactorleverage_cpp, 11},
    {"_bayeshscore_d1logdobs_SVLevy_multifactorleverage_cpp", (DL_FUNC) &_bayeshscore_d1logdobs_SVLevy_multifactorleverage_cpp, 10},
    {"_bayeshscore_d2logdobs_SVLevy_multifactorleverage_cpp", (DL_FUNC) &_bayeshscore_d2logdobs_SVLevy_multifactorleverage_cpp, 4},
    {"_rcpp_module_boot_module_tree", (DL_FUNC) &_rcpp_module_boot_module_tree, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_bayeshscore(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
